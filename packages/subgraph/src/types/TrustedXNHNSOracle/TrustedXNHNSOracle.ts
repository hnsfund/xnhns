// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewOracle extends ethereum.Event {
  get params(): NewOracle__Params {
    return new NewOracle__Params(this);
  }
}

export class NewOracle__Params {
  _event: NewOracle;

  constructor(event: NewOracle) {
    this._event = event;
  }

  get oracle(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewOwner extends ethereum.Event {
  get params(): NewOwner__Params {
    return new NewOwner__Params(this);
  }
}

export class NewOwner__Params {
  _event: NewOwner;

  constructor(event: NewOwner) {
    this._event = event;
  }

  get node(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TrustedOracleUpdate extends ethereum.Event {
  get params(): TrustedOracleUpdate__Params {
    return new TrustedOracleUpdate__Params(this);
  }
}

export class TrustedOracleUpdate__Params {
  _event: TrustedOracleUpdate;

  constructor(event: TrustedOracleUpdate) {
    this._event = event;
  }

  get node(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TrustedXNHNSOracle extends ethereum.SmartContract {
  static bind(address: Address): TrustedXNHNSOracle {
    return new TrustedXNHNSOracle("TrustedXNHNSOracle", address);
  }

  NAMESPACE(): string {
    let result = super.call("NAMESPACE", "NAMESPACE():(string)", []);

    return result[0].toString();
  }

  try_NAMESPACE(): ethereum.CallResult<string> {
    let result = super.tryCall("NAMESPACE", "NAMESPACE():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getCallerPermission(addr: Address): boolean {
    let result = super.call(
      "getCallerPermission",
      "getCallerPermission(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBoolean();
  }

  try_getCallerPermission(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getCallerPermission",
      "getCallerPermission(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getTLDOwner(node: Bytes): Address {
    let result = super.call("getTLDOwner", "getTLDOwner(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(node)
    ]);

    return result[0].toAddress();
  }

  try_getTLDOwner(node: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTLDOwner",
      "getTLDOwner(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(node)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  receiveTLDUpdate(node: Bytes, owner_: Address): boolean {
    let result = super.call(
      "receiveTLDUpdate",
      "receiveTLDUpdate(bytes32,address):(bool)",
      [ethereum.Value.fromFixedBytes(node), ethereum.Value.fromAddress(owner_)]
    );

    return result[0].toBoolean();
  }

  try_receiveTLDUpdate(
    node: Bytes,
    owner_: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "receiveTLDUpdate",
      "receiveTLDUpdate(bytes32,address):(bool)",
      [ethereum.Value.fromFixedBytes(node), ethereum.Value.fromAddress(owner_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  requestTLDUpdate(tld: string): Bytes {
    let result = super.call(
      "requestTLDUpdate",
      "requestTLDUpdate(string):(bytes32)",
      [ethereum.Value.fromString(tld)]
    );

    return result[0].toBytes();
  }

  try_requestTLDUpdate(tld: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "requestTLDUpdate",
      "requestTLDUpdate(string):(bytes32)",
      [ethereum.Value.fromString(tld)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  setCallerPermission(addr: Address, permission: boolean): boolean {
    let result = super.call(
      "setCallerPermission",
      "setCallerPermission(address,bool):(bool)",
      [ethereum.Value.fromAddress(addr), ethereum.Value.fromBoolean(permission)]
    );

    return result[0].toBoolean();
  }

  try_setCallerPermission(
    addr: Address,
    permission: boolean
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "setCallerPermission",
      "setCallerPermission(address,bool):(bool)",
      [ethereum.Value.fromAddress(addr), ethereum.Value.fromBoolean(permission)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  setOracle(oracle: Address, fee: BigInt, jobId: Bytes): boolean {
    let result = super.call(
      "setOracle",
      "setOracle(address,uint256,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(oracle),
        ethereum.Value.fromUnsignedBigInt(fee),
        ethereum.Value.fromFixedBytes(jobId)
      ]
    );

    return result[0].toBoolean();
  }

  try_setOracle(
    oracle: Address,
    fee: BigInt,
    jobId: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "setOracle",
      "setOracle(address,uint256,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(oracle),
        ethereum.Value.fromUnsignedBigInt(fee),
        ethereum.Value.fromFixedBytes(jobId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tldOwners(param0: Bytes): Address {
    let result = super.call("tldOwners", "tldOwners(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toAddress();
  }

  try_tldOwners(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("tldOwners", "tldOwners(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _namespace(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ReceiveTLDUpdateCall extends ethereum.Call {
  get inputs(): ReceiveTLDUpdateCall__Inputs {
    return new ReceiveTLDUpdateCall__Inputs(this);
  }

  get outputs(): ReceiveTLDUpdateCall__Outputs {
    return new ReceiveTLDUpdateCall__Outputs(this);
  }
}

export class ReceiveTLDUpdateCall__Inputs {
  _call: ReceiveTLDUpdateCall;

  constructor(call: ReceiveTLDUpdateCall) {
    this._call = call;
  }

  get node(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get owner_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ReceiveTLDUpdateCall__Outputs {
  _call: ReceiveTLDUpdateCall;

  constructor(call: ReceiveTLDUpdateCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RequestTLDUpdateCall extends ethereum.Call {
  get inputs(): RequestTLDUpdateCall__Inputs {
    return new RequestTLDUpdateCall__Inputs(this);
  }

  get outputs(): RequestTLDUpdateCall__Outputs {
    return new RequestTLDUpdateCall__Outputs(this);
  }
}

export class RequestTLDUpdateCall__Inputs {
  _call: RequestTLDUpdateCall;

  constructor(call: RequestTLDUpdateCall) {
    this._call = call;
  }

  get tld(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RequestTLDUpdateCall__Outputs {
  _call: RequestTLDUpdateCall;

  constructor(call: RequestTLDUpdateCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class SetCallerPermissionCall extends ethereum.Call {
  get inputs(): SetCallerPermissionCall__Inputs {
    return new SetCallerPermissionCall__Inputs(this);
  }

  get outputs(): SetCallerPermissionCall__Outputs {
    return new SetCallerPermissionCall__Outputs(this);
  }
}

export class SetCallerPermissionCall__Inputs {
  _call: SetCallerPermissionCall;

  constructor(call: SetCallerPermissionCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get permission(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetCallerPermissionCall__Outputs {
  _call: SetCallerPermissionCall;

  constructor(call: SetCallerPermissionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetOracleCall extends ethereum.Call {
  get inputs(): SetOracleCall__Inputs {
    return new SetOracleCall__Inputs(this);
  }

  get outputs(): SetOracleCall__Outputs {
    return new SetOracleCall__Outputs(this);
  }
}

export class SetOracleCall__Inputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }

  get oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get fee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get jobId(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SetOracleCall__Outputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
